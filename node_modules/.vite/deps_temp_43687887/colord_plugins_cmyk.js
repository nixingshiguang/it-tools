import "./chunk-2LSFTFF7.js";

// node_modules/.pnpm/colord@2.9.3/node_modules/colord/plugins/cmyk.mjs
var r = function(r2) {
  return "string" == typeof r2 ? r2.length > 0 : "number" == typeof r2;
};
var n = function(r2, n2, t2) {
  return void 0 === n2 && (n2 = 0), void 0 === t2 && (t2 = Math.pow(10, n2)), Math.round(t2 * r2) / t2 + 0;
};
var t = function(r2, n2, t2) {
  return void 0 === n2 && (n2 = 0), void 0 === t2 && (t2 = 1), r2 > t2 ? t2 : r2 > n2 ? r2 : n2;
};
var u = function(r2) {
  return { c: t(r2.c, 0, 100), m: t(r2.m, 0, 100), y: t(r2.y, 0, 100), k: t(r2.k, 0, 100), a: t(r2.a) };
};
var e = function(r2) {
  return { c: n(r2.c, 2), m: n(r2.m, 2), y: n(r2.y, 2), k: n(r2.k, 2), a: n(r2.a, 3) };
};
function c(r2) {
  return { r: n(255 * (1 - r2.c / 100) * (1 - r2.k / 100)), g: n(255 * (1 - r2.m / 100) * (1 - r2.k / 100)), b: n(255 * (1 - r2.y / 100) * (1 - r2.k / 100)), a: r2.a };
}
function i(r2) {
  var t2 = 1 - Math.max(r2.r / 255, r2.g / 255, r2.b / 255), u2 = (1 - r2.r / 255 - t2) / (1 - t2), e2 = (1 - r2.g / 255 - t2) / (1 - t2), c2 = (1 - r2.b / 255 - t2) / (1 - t2);
  return { c: isNaN(u2) ? 0 : n(100 * u2), m: isNaN(e2) ? 0 : n(100 * e2), y: isNaN(c2) ? 0 : n(100 * c2), k: n(100 * t2), a: r2.a };
}
function o(n2) {
  var t2 = n2.c, e2 = n2.m, i2 = n2.y, o2 = n2.k, m2 = n2.a, a2 = void 0 === m2 ? 1 : m2;
  return r(t2) && r(e2) && r(i2) && r(o2) ? c(u({ c: Number(t2), m: Number(e2), y: Number(i2), k: Number(o2), a: Number(a2) })) : null;
}
var m = /^device-cmyk\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i;
var a = function(r2) {
  var n2 = m.exec(r2);
  return n2 ? c(u({ c: Number(n2[1]) * (n2[2] ? 1 : 100), m: Number(n2[3]) * (n2[4] ? 1 : 100), y: Number(n2[5]) * (n2[6] ? 1 : 100), k: Number(n2[7]) * (n2[8] ? 1 : 100), a: void 0 === n2[9] ? 1 : Number(n2[9]) / (n2[10] ? 100 : 1) })) : null;
};
function cmyk_default(r2, n2) {
  r2.prototype.toCmyk = function() {
    return e(i(this.rgba));
  }, r2.prototype.toCmykString = function() {
    return r3 = e(i(this.rgba)), n3 = r3.c, t2 = r3.m, u2 = r3.y, c2 = r3.k, (o2 = r3.a) < 1 ? "device-cmyk(" + n3 + "% " + t2 + "% " + u2 + "% " + c2 + "% / " + o2 + ")" : "device-cmyk(" + n3 + "% " + t2 + "% " + u2 + "% " + c2 + "%)";
    var r3, n3, t2, u2, c2, o2;
  }, n2.object.push([o, "cmyk"]), n2.string.push([a, "cmyk"]);
}
export {
  cmyk_default as default
};
//# sourceMappingURL=colord_plugins_cmyk.js.map
