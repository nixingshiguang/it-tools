{
  "version": 3,
  "sources": ["../../.pnpm/figue@1.2.0/node_modules/figue/dist/index.mjs"],
  "sourcesContent": ["import _ from 'lodash';\n\nconst format$7 = {\n  validate: (value) => _.isNumber(value) && !_.isNaN(value) && _.isFinite(value),\n  coerce: (value) => _.isString(value) ? parseFloat(value) : value\n};\n\nconst format$6 = {\n  validate: (value) => _.isInteger(value),\n  coerce: (value) => _.isString(value) ? parseInt(value) : value\n};\n\nconst format$5 = {\n  validate: (value, { values }) => _.isString(value) && values.includes(value),\n  coerce: (value) => value.toString()\n};\n\nconst format$4 = {\n  validate: () => true,\n  coerce: (value) => value\n};\n\nconst format$3 = {\n  validate: (value) => _.isString(value),\n  coerce: (value) => value.toString()\n};\n\nconst format$2 = {\n  validate: () => true,\n  coerce: (value) => _.isString(value) ? value.trim().toLowerCase() === \"true\" : Boolean(value)\n};\n\nconst format$1 = {\n  validate: (value, { validate }) => validate?.(value) ?? true,\n  coerce: (value, { coerce }) => coerce?.(value) ?? value\n};\n\nconst format = {\n  validate: (value) => _.isArray(value) && value.every((item) => _.isString(item)),\n  coerce: (value) => {\n    if (!_.isString(value))\n      return value;\n    if (value === \"\")\n      return [];\n    return value.split(\",\");\n  }\n};\n\nconst formats = {\n  integer: format$6,\n  enum: format$5,\n  float: format$7,\n  any: format$4,\n  string: format$3,\n  boolean: format$2,\n  custom: format$1,\n  array: format\n};\n\nconst isFalsyOrHasThrown = (cb) => {\n  try {\n    return !cb();\n  } catch (e) {\n    return true;\n  }\n};\n\nfunction flattenSchema(schema, keys = []) {\n  const acc = [];\n  for (const [key, value] of Object.entries(schema)) {\n    const valueHasFormat = Object.entries(value).some(([k, v]) => k === \"format\" && _.isString(v));\n    const path = [...keys, key];\n    if (_.isObject(value) && !valueHasFormat) {\n      const childAcc = flattenSchema(value, path);\n      acc.push(...childAcc);\n    } else {\n      acc.push({\n        path,\n        schema: value\n      });\n    }\n  }\n  return acc;\n}\nclass Figue {\n  constructor(schema) {\n    this.schema = schema;\n    this.env = {};\n    this.schemaFlat = flattenSchema(schema);\n  }\n  loadEnv(env) {\n    this.env = _.merge(this.env, env);\n    return this;\n  }\n  loadConfig(config) {\n    this.config = _.merge(this.config, config);\n    return this;\n  }\n  validate() {\n    const configValues = this.getConfig();\n    const errors = [];\n    for (const { path, schema } of this.schemaFlat) {\n      const { format } = schema;\n      const { validate } = formats[format] ?? {};\n      if (!validate) {\n        throw new Error(`[figue:invalid-format] The format '${format}' does not exist, valid formats are ${Object.keys(formats).join(\", \")}.`);\n      }\n      const value = _.get(configValues, path);\n      if (isFalsyOrHasThrown(() => validate(value, schema))) {\n        errors.push(`[figue:validation-error] The key '${path}' does not comply with the format '${format}', received value ${JSON.stringify(value)}`);\n      }\n    }\n    if (errors.length > 0) {\n      throw new TypeError(errors.join(\"\\n\"));\n    }\n    return this;\n  }\n  getValue({ path, schema }) {\n    const { coerce } = formats[schema.format] ?? {};\n    if (!coerce) {\n      throw new Error(`[figue:invalid-format] The format '${schema.format}' does not exist, valid formats are ${Object.keys(formats).join(\", \")}.`);\n    }\n    const value = this.env[schema.env] ?? _.get(this.config, path) ?? schema.default;\n    return coerce?.(value, schema) ?? value;\n  }\n  getConfig() {\n    const config = this.schemaFlat.reduce((acc, { path, schema }) => {\n      const value = this.getValue({ path, schema });\n      _.set(acc, path, value);\n      return acc;\n    }, {});\n    return config;\n  }\n}\nconst figue = (schema) => new Figue(schema);\n\nexport { Figue, figue };\n"],
  "mappings": "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",
  "names": ["_", "format"]
}
