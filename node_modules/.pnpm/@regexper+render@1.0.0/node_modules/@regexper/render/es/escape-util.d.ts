export declare function toHex(value: any): string;
export declare const CODE_MAPPING: {
    b: (string | number | boolean)[];
    B: (string | number | boolean)[];
    d: (string | number | boolean)[];
    D: (string | number | boolean)[];
    f: (string | number | boolean)[];
    n: (string | number | boolean)[];
    r: (string | number | boolean)[];
    s: (string | number | boolean)[];
    S: (string | number | boolean)[];
    t: (string | number | boolean)[];
    v: (string | number | boolean)[];
    w: (string | number | boolean)[];
    W: (string | number | boolean)[];
    1: (string | number | boolean)[];
    2: (string | number | boolean)[];
    3: (string | number | boolean)[];
    4: (string | number | boolean)[];
    5: (string | number | boolean)[];
    6: (string | number | boolean)[];
    7: (string | number | boolean)[];
    8: (string | number | boolean)[];
    9: (string | number | boolean)[];
    0(arg: string): (string | number | boolean)[];
    c(arg: string): (string | number | boolean)[];
    x(arg: string): (string | number | boolean)[];
    u(arg: string): (string | number | boolean)[];
};
export declare type Code = keyof typeof CODE_MAPPING;
export declare function getCodeData(mapping: typeof CODE_MAPPING, code: Code, arg: string): [string, number, boolean];
